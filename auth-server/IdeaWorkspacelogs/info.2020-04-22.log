No active profile set, falling back to default profiles: default
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 663ms. Found 8 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.AccountRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.OauthClientDetailsRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.OauthCodeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.PermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.RolePermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.UserRoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
BeanFactory id=b4c2dac8-5087-3581-a159-3b7d03262a7c
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@90029b' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 5.4.12.Final
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1748053
Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@111640d, org.springframework.security.web.context.SecurityContextPersistenceFilter@4dfad2, org.springframework.security.web.header.HeaderWriterFilter@441c13, org.springframework.security.web.authentication.logout.LogoutFilter@d3cf6b, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@7cba85, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d934b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@480730, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@13ccbdd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a42610, org.springframework.security.web.session.SessionManagementFilter@13b59e2, org.springframework.security.web.access.ExceptionTranslationFilter@6c87fa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@227940]
Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@475547, org.springframework.security.web.context.SecurityContextPersistenceFilter@1aeaee3, org.springframework.security.web.header.HeaderWriterFilter@f433db, org.springframework.security.web.authentication.logout.LogoutFilter@1c514e4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@127de0e, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@58d05d, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@dab184, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a20aab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d91ef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b9b035, org.springframework.security.web.session.SessionManagementFilter@388639, org.springframework.security.web.access.ExceptionTranslationFilter@1ee6683, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@faebc9]
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Initializing ExecutorService 'applicationTaskExecutor'
You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
Exposing 2 endpoint(s) beneath base path '/actuator'
Started UserServiceImplTest in 52.267 seconds (JVM running for 73.036)
HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m9s539ms220µs738ns).
Setting initial instance status as: STARTING
Unregistering application AUTH-SERVICE with eureka with status DOWN
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
No active profile set, falling back to default profiles: default
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Finished Spring Data repository scanning in 633ms. Found 8 JPA repository interfaces.
Multiple Spring Data modules found, entering strict repository configuration mode!
Bootstrapping Spring Data Redis repositories in DEFAULT mode.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.AccountRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.OauthClientDetailsRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.OauthCodeRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.PermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.RolePermissionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.RoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.UserRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface org.wxz.authserver.repository.UserRoleRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
Finished Spring Data repository scanning in 80ms. Found 0 Redis repository interfaces.
Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
BeanFactory id=b4c2dac8-5087-3581-a159-3b7d03262a7c
Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1e56885' of type [org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
HHH000204: Processing PersistenceUnitInfo [name: default]
HHH000412: Hibernate ORM core version 5.4.12.Final
HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
HikariPool-1 - Starting...
HikariPool-1 - Start completed.
HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Initialized JPA EntityManagerFactory for persistence unit 'default'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4ac3f5
Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@eb5402, org.springframework.security.web.context.SecurityContextPersistenceFilter@e8f04c, org.springframework.security.web.header.HeaderWriterFilter@b547c, org.springframework.security.web.authentication.logout.LogoutFilter@1e0652, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@1af65eb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1e636cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18609f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@154de46, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e3da5a, org.springframework.security.web.session.SessionManagementFilter@4fac3a, org.springframework.security.web.access.ExceptionTranslationFilter@14ea177, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19e9c95]
Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1ad470b, org.springframework.security.web.context.SecurityContextPersistenceFilter@e80c85, org.springframework.security.web.header.HeaderWriterFilter@14ae871, org.springframework.security.web.authentication.logout.LogoutFilter@14eb6e7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@49ab66, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@cf1542, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1f8693e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1dd9eb6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17ce31c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@146766b, org.springframework.security.web.session.SessionManagementFilter@c9b564, org.springframework.security.web.access.ExceptionTranslationFilter@1a00385, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1767bd9]
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Initializing ExecutorService 'applicationTaskExecutor'
You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
Exposing 2 endpoint(s) beneath base path '/actuator'
Started UserDetailServiceImplTest in 22.538 seconds (JVM running for 25.987)
认证授权-获取用户信息--null-- userName=wxz
HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m21s77ms871µs570ns).
Setting initial instance status as: STARTING
Unregistering application AUTH-SERVICE with eureka with status DOWN
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Shutdown completed.
